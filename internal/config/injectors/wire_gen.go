// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package injectors

import (
	"github.com/trend-me/ai-callback/internal/config/properties"
	"github.com/trend-me/ai-callback/internal/delivery/controllers"
	"github.com/trend-me/ai-callback/internal/domain/interfaces"
	"github.com/trend-me/ai-callback/internal/domain/usecases"
	"github.com/trend-me/ai-callback/internal/integration/api"
	"github.com/trend-me/ai-callback/internal/integration/connections"
	"github.com/trend-me/ai-callback/internal/integration/queues"
	"github.com/trend-me/golang-rabbitmq-lib/rabbitmq"
)

// Injectors from wire.go:

func InitializeQueueAiRequesterConsumer() (interfaces.QueueAiCallbackConsumer, error) {
	connection, err := connections.ConnectQueue()
	if err != nil {
		return nil, err
	}
	connectionAiCallbackConsumer := newQueueConnectionAiCallbackConsumer(connection)
	connectionAiPromptBuilder := newQueueConnectionAiPromptBuilder(connection)
	queueAiPromptBuilder := queues.NewAiPromptBuilder(connectionAiPromptBuilder)
	urlApiPromptRoadMapConfig := urlApiPromptRoadMapConfigGetter()
	apiPromptRoadMapConfig := api.NewPromptRoadMapConfig(urlApiPromptRoadMapConfig)
	urlApiPromptRoadMapConfigExecution := urlApiPromptRoadMapConfigExecutionGetter()
	apiPromptRoadMapConfigExecution := api.NewPromptRoadMapConfigExecution(urlApiPromptRoadMapConfigExecution)
	connectionOutputGetter := newQueueConnectionOutputGetter(connection)
	queueOutput := queues.NewOutput(connectionOutputGetter)
	useCase := usecases.NewUseCase(queueAiPromptBuilder, apiPromptRoadMapConfig, apiPromptRoadMapConfigExecution, queueOutput)
	controller := controllers.NewController(useCase)
	queueAiCallbackConsumer := queues.NewAiCallbackConsumer(connectionAiCallbackConsumer, controller)
	return queueAiCallbackConsumer, nil
}

// wire.go:

func newQueueConnectionOutputGetter(connection *rabbitmq.Connection) queues.ConnectionOutputGetter {
	return func(queueName string) queues.ConnectionOutput {
		return rabbitmq.NewQueue(
			connection,
			queueName, rabbitmq.ContentTypeJson, properties.CreateQueueIfNX(), true,
			true,
		)
	}
}

func newQueueConnectionAiCallbackConsumer(connection *rabbitmq.Connection) queues.ConnectionAiCallbackConsumer {
	return rabbitmq.NewQueue(
		connection, properties.QueueAiCallback, rabbitmq.ContentTypeJson, properties.CreateQueueIfNX(), true,
		true,
	)
}

func newQueueConnectionAiPromptBuilder(connection *rabbitmq.Connection) queues.ConnectionAiPromptBuilder {
	return rabbitmq.NewQueue(
		connection, properties.QueueAiPromptBuilder, rabbitmq.ContentTypeJson, properties.CreateQueueIfNX(), true,
		true,
	)
}

func urlApiPromptRoadMapConfigGetter() api.UrlApiPromptRoadMapConfig {
	return properties.UrlApiPromptRoadMapConfig
}

func urlApiPromptRoadMapConfigExecutionGetter() api.UrlApiPromptRoadMapConfigExecution {
	return properties.UrlApiPromptRoadMapConfigExecution
}
